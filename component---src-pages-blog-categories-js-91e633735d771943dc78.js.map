{"version":3,"sources":["webpack:///./src/pages/blog/categories.module.css","webpack:///./src/pages/blog/categories.js"],"names":["module","exports","Categories","categoriesDiv","data","location","siteTitle","site","siteMetadata","author","name","categoriesMap","allMarkdownRemark","edges","forEach","post","categories","node","frontmatter","times","undefined","Object","entries","length","className","categoryStyles","container","map","category","key","to","title","linkTo","description","pageQuery"],"mappings":"8EACAA,EAAOC,QAAU,CAAC,UAAY,wC,kCCD9B,mIAoDeC,UA5CI,SAAC,GAAwB,IAgBtCC,EAhBgBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACpBC,EAAeF,EAAKG,KAAKC,aAAaC,OAAOC,KAApC,UAGTC,EAAgB,GAgCtB,OA/BcP,EAAKQ,kBAAkBC,MAC/BC,SAAQ,SAAAC,GACZ,IAAMC,EAAaD,EAAKE,KAAKC,YAAYF,WACzC,GAAmB,OAAfA,EAAqB,OAAO,EAChC,IAAIG,EAAQR,EAAcK,QACZI,IAAVD,IAAqBA,EAAQ,GACjCA,GAAS,EACTR,EAAcK,GAAcG,KAM5BhB,EADoB,OAAlBQ,GAA0BU,OAAOC,QAAQX,GAAeY,OAAS,EAEjE,yBAAKC,UAAWC,IAAeC,WAC7B,4BACGL,OAAOC,QAAQX,GAAegB,KAAI,YAAwB,IAAtBC,EAAqB,KAAXT,EAAW,KACxD,OACE,wBAAIU,IAAKD,GACP,kBAAC,OAAD,CAAME,GAAE,oBAAsBF,EAAtB,KAAoCA,GAC5C,kCAAWT,EAAX,WAQI,sDAIhB,kBAAC,IAAD,CAAQd,SAAUA,EAAU0B,MAAOzB,EAAW0B,OAAO,UACnD,kBAAC,IAAD,CAAKD,MAAM,aAAaE,YAAW,qBAAuB3B,EAAvB,WACnC,iCAAUH,KAOT,IAAM+B,EAAS","file":"component---src-pages-blog-categories-js-91e633735d771943dc78.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"categories-module--container--2noEh\"};","import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Layout from \"../../components/layout\"\nimport SEO from \"../../components/seo\"\n\nimport categoryStyles from \"./categories.module.css\"\n\nconst Categories = ({ data, location }) => {\n  const siteTitle = `${data.site.siteMetadata.author.name}'s Blog`\n\n  // Generate A Map Of All Categories That Record Times Of Each Catrgory\n  const categoriesMap = {}\n  const posts = data.allMarkdownRemark.edges\n  posts.forEach(post => {\n    const categories = post.node.frontmatter.categories\n    if (categories === null) return true\n    let times = categoriesMap[categories]\n    if (times === undefined) times = 0\n    times += 1\n    categoriesMap[categories] = times\n  })\n\n  // Generate The Categories UI\n  let categoriesDiv\n  if (categoriesMap !== null && Object.entries(categoriesMap).length > 0) {\n    categoriesDiv = (\n      <div className={categoryStyles.container}>\n        <ul>\n          {Object.entries(categoriesMap).map(([category, times]) => {\n            return (\n              <li key={category}>\n                <Link to={`/blog/categories/${category}/`}>{category}</Link>\n                <span>{`(${times})`}</span>\n              </li>\n            )\n          })}\n        </ul>\n      </div>\n    )\n  } else {\n    categoriesDiv = <p>There Are No Categories</p>\n  }\n\n  return (\n    <Layout location={location} title={siteTitle} linkTo=\"/blog/\">\n      <SEO title=\"Categories\" description={`All Categories Of ${siteTitle} Posts`} />\n      <article>{categoriesDiv}</article>\n    </Layout>\n  )\n}\n\nexport default Categories\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        author {\n          name\n        }\n      }\n    }\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      limit: 1000\n    ) {\n      edges {\n        node {\n          frontmatter {\n            categories\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}
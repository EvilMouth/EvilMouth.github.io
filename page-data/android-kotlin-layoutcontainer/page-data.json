{"componentChunkName":"component---src-templates-blog-post-js","path":"/android-kotlin-layoutcontainer/","result":{"data":{"site":{"siteMetadata":{"title":"Evil Mouth's Blog"}},"markdownRemark":{"id":"c9f4758a-15e9-5e87-aa37-23372cad8786","excerpt":"用的肯定很爽，少了一堆的编写，插件本身为我们生成代码，并且还会缓存起来，通过调用代替，避免频繁调用，看起来方便又高效，实际上有一个需要注意的点被忽略 0x0…","html":"<p><code class=\"language-text\">Kotlin Android Extensions</code>用的肯定很爽，少了一堆<code class=\"language-text\">findViewById</code>的编写，插件本身为我们生成代码，并且还会缓存起来，通过调用<code class=\"language-text\">_$_findCachedViewById</code>代替，避免频繁调用<code class=\"language-text\">findViewById</code>，看起来方便又高效，实际上有一个需要注意的点被忽略</p>\n<!-- More -->\n<h2>0x01 缓存问题</h2>\n<p>在实际项目中，往往不止在<code class=\"language-text\">Activity</code>或<code class=\"language-text\">Fragment</code>里面用到该插件，更多的会是在列表里面的<code class=\"language-text\">item</code>去使用，比方说<code class=\"language-text\">RecyclerView</code>的<code class=\"language-text\">ViewHolder</code>，往往只是这样写</p>\n<div class=\"gatsby-highlight\" data-language=\"kotlin\"><pre class=\"language-kotlin\"><code class=\"language-kotlin\">holder<span class=\"token punctuation\">.</span>itemView<span class=\"token punctuation\">.</span>textView1<span class=\"token punctuation\">.</span>text <span class=\"token operator\">=</span> <span class=\"token string\">\"text1\"</span>\nholder<span class=\"token punctuation\">.</span>itemView<span class=\"token punctuation\">.</span>textView2<span class=\"token punctuation\">.</span>text <span class=\"token operator\">=</span> <span class=\"token string\">\"text2\"</span></code></pre></div>\n<p>看上去跟<code class=\"language-text\">Activity</code>调用的方式差不多，只是需要通过具体的<code class=\"language-text\">itemView</code>去访问到具体的<code class=\"language-text\">textView1</code>，应该没什么问题，但是当把kotlin代码转成Java代码后，看到的是这样的情况</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token class-name\">TextView</span> var24 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">TextView</span><span class=\"token punctuation\">)</span>var3<span class=\"token punctuation\">.</span><span class=\"token function\">findViewById</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">.</span>textView1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nvar24<span class=\"token punctuation\">.</span><span class=\"token function\">setText</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"text1\"</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>可以看到并没有使用cache，也就是<code class=\"language-text\">_$_findCachedViewById</code>，当我改成调用两次</p>\n<div class=\"gatsby-highlight\" data-language=\"kotlin\"><pre class=\"language-kotlin\"><code class=\"language-kotlin\">holder<span class=\"token punctuation\">.</span>itemView<span class=\"token punctuation\">.</span>textView1<span class=\"token punctuation\">.</span>text <span class=\"token operator\">=</span> <span class=\"token string\">\"text1\"</span>\nholder<span class=\"token punctuation\">.</span>itemView<span class=\"token punctuation\">.</span>textView1<span class=\"token punctuation\">.</span>textSize <span class=\"token operator\">=</span> <span class=\"token number\">16f</span></code></pre></div>\n<p>则会</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token class-name\">TextView</span> var24 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">TextView</span><span class=\"token punctuation\">)</span>var3<span class=\"token punctuation\">.</span><span class=\"token function\">findViewById</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">.</span>textView1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nvar24<span class=\"token punctuation\">.</span><span class=\"token function\">setText</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"text1\"</span><span class=\"token punctuation\">)</span>\nvar24 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">TextView</span><span class=\"token punctuation\">)</span>var3<span class=\"token punctuation\">.</span><span class=\"token function\">findViewById</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">.</span>textView1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nvar24<span class=\"token punctuation\">.</span><span class=\"token function\">setTextSize</span><span class=\"token punctuation\">(</span><span class=\"token number\">14f</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>竟然调用了两次<code class=\"language-text\">findViewById</code></p>\n<h2>0x02 缓存问题解决</h2>\n<p>当在这种需要通过<code class=\"language-text\">view</code>去获取<code class=\"language-text\">子view</code>再去操作的情况下，官方其实后来给了一个解决方案</p>\n<ul>\n<li>LayoutContainer</li>\n</ul>\n<p>需要额外再<code class=\"language-text\">build.gradle</code>配置</p>\n<div class=\"gatsby-highlight\" data-language=\"groovy\"><pre class=\"language-groovy\"><code class=\"language-groovy\">androidExtensions <span class=\"token punctuation\">{</span>\n    experimental <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>然后将需要的类实现<code class=\"language-text\">LayoutContainer</code>接口</p>\n<div class=\"gatsby-highlight\" data-language=\"kotlin\"><pre class=\"language-kotlin\"><code class=\"language-kotlin\"><span class=\"token keyword\">class</span> <span class=\"token function\">ViewHolder</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">override</span> <span class=\"token keyword\">val</span> containerView<span class=\"token operator\">:</span> View<span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> RecyclerView<span class=\"token punctuation\">.</span><span class=\"token function\">ViewHolder</span><span class=\"token punctuation\">(</span>containerView<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> LayoutContainer <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">fun</span> <span class=\"token function\">setup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        textView1<span class=\"token punctuation\">.</span>text <span class=\"token operator\">=</span> <span class=\"token string\">\"text1\"</span>\n        textView1<span class=\"token punctuation\">.</span>textSize <span class=\"token operator\">=</span> <span class=\"token number\">16f</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>这下再来看看编译后的代码</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token class-name\">TextView</span> var24 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">TextView</span><span class=\"token punctuation\">)</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_$<span class=\"token function\">_findCachedViewById</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">.</span>textView1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nvar24<span class=\"token punctuation\">.</span><span class=\"token function\">setText</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"text1\"</span><span class=\"token punctuation\">)</span>\nvar24 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">TextView</span><span class=\"token punctuation\">)</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_$<span class=\"token function\">_findCachedViewById</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">.</span>textView1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nvar24<span class=\"token punctuation\">.</span><span class=\"token function\">setTextSize</span><span class=\"token punctuation\">(</span><span class=\"token number\">14f</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h2>0x03 待续</h2>","frontmatter":{"title":"Kotlin androidExtensions findViewById缓存问题","date":"September 26, 2019","tags":["kotlin"],"categories":"Android"}}},"pageContext":{"slug":"/android-kotlin-layoutcontainer/","previous":{"fields":{"slug":"/blockchain-zhi-neng-he-yue-zhen-hao-wan-2/"},"frontmatter":{"title":"智能合约真好玩（二）"}},"next":{"fields":{"slug":"/qianqianqianhouhouhou/"},"frontmatter":{"title":"前前前后后后"}}}},"staticQueryHashes":["2841359383"]}
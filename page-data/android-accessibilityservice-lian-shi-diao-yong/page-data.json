{"componentChunkName":"component---src-templates-blog-post-js","path":"/android-accessibilityservice-lian-shi-diao-yong/","result":{"data":{"site":{"siteMetadata":{"title":"Evil Mouth","author":{"name":"Evil Mouth"}}},"markdownRemark":{"id":"c6d9d105-3021-595b-a828-26fe11d02635","excerpt":"提供一种链式结构 AccessibilityService 的方案，相比于正常使用 AccessibilityService，有着几大优点：结构清晰、调用链一目了然、方便调试等 0x00 AccessibilityService…","html":"<p>提供一种链式结构 AccessibilityService 的方案，相比于正常使用 AccessibilityService，有着几大优点：结构清晰、调用链一目了然、方便调试等</p>\n<!-- More -->\n<h2>0x00 AccessibilityService</h2>\n<p>最原始的写法，就是在<code class=\"language-text\">onAccessibilityEvent(AccessibilityEvent)</code>回调中根据<code class=\"language-text\">eventType</code>处理相应的动作</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Override</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">onAccessibilityEvent</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">AccessibilityEvent</span> event<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span><span class=\"token function\">getEventType</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">case</span> <span class=\"token class-name\">AccessibilityEvent</span><span class=\"token punctuation\">.</span>TYPE_WINDOW_STATE_CHANGED<span class=\"token operator\">:</span>\n            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">case</span> <span class=\"token class-name\">AccessibilityEvent</span><span class=\"token punctuation\">.</span>TYPE_WINDOW_CONTENT_CHANGED<span class=\"token operator\">:</span>\n            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">case</span> <span class=\"token class-name\">AccessibilityEvent</span><span class=\"token punctuation\">.</span>TYPE_NOTIFICATION_STATE_CHANGED<span class=\"token operator\">:</span>\n            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<blockquote>\n<p>处理界面越来越多的时候这里的逻辑就会越来越复杂，维护和调试的难度大大提升</p>\n</blockquote>\n<h2>0x01 引入链式概念</h2>\n<p>引入了<code class=\"language-text\">Situation</code>概念，将每种变化通过链式结构连接起来，只需要关心 <strong>当前变化的判定</strong>、<strong>当前变化的处理</strong>、<strong>下一步变化的预判</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token class-name\">Situation</span><span class=\"token punctuation\">.</span>java\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">Situation</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 定义eventType 支持多种</span>\n    <span class=\"token comment\">// 例如</span>\n    <span class=\"token comment\">// TYPE_NOTIFICATION_STATE_CHANGED | TYPE_WINDOW_STATE_CHANGED</span>\n    <span class=\"token keyword\">int</span> <span class=\"token function\">eventTypes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// 判定当前变化是否匹配</span>\n    <span class=\"token keyword\">boolean</span> <span class=\"token function\">match</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@NonNull</span> <span class=\"token class-name\">AccessibilityService</span> accessibilityService<span class=\"token punctuation\">,</span> <span class=\"token annotation punctuation\">@NonNull</span> <span class=\"token class-name\">AccessibilityEvent</span> accessibilityEvent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// 匹配 -> 执行任务</span>\n    <span class=\"token keyword\">boolean</span> <span class=\"token function\">execute</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@NonNull</span> <span class=\"token class-name\">AccessibilityService</span> accessibilityService<span class=\"token punctuation\">,</span> <span class=\"token annotation punctuation\">@NonNull</span> <span class=\"token class-name\">AccessibilityEvent</span> accessibilityEvent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// 设定下一步 支持多种</span>\n    <span class=\"token class-name\">Situation</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token function\">nextSituations</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<blockquote>\n<p>继承<code class=\"language-text\">LinkedAccessibilityService</code>创建辅助服务\n实现<code class=\"language-text\">Situation</code>创建步骤</p>\n</blockquote>\n<h2>0x02 例子</h2>\n<p>简单的微信抢红包例子\n<a href=\"https://github.com/izyhang/LinkedAccessibilityService/blob/master/example/src/main/java/com/zyhang/linkedaccessibilityservice/example/AccessibilityServiceExample.kt\">https://github.com/izyhang/LinkedAccessibilityService/blob/master/example/src/main/java/com/zyhang/linkedaccessibilityservice/example/AccessibilityServiceExample.kt</a></p>","frontmatter":{"title":"Android AccessibilityService - 链式结构","date":"August 27, 2018","tags":["accessibilityService"],"categories":"Android"}}},"pageContext":{"slug":"/android-accessibilityservice-lian-shi-diao-yong/","previous":{"excerpt":"通常的做法是通过，然后遍历元素拿到为图片地址。但是针对微信公众号文章就不适用了，尤其是其图片元素采用懒加载方式，所以取到的为空，但是在微信客户端能够正常取到所有图片，所以对文章进行分析 0x0…","fields":{"slug":"/android-webview-js-yu-lan-tu-pian-zhi-wei-xin-wen-zhang/"},"frontmatter":{"date":"August 21, 2018","title":"Android WebView注入Js预览图片 - 微信公众号文章","tags":["webView","js"],"categories":"Android"}},"next":{"excerpt":"近期升级了一波，发现原先取消掉的点击阴影效果又出现了，以为是改了主题遍翻了翻改动，发现并没有可疑的修改导致，最后在源码里面发现真凶！ 0x00 support-27.1.1 此前的点击效果是通过设置进行取消 0x01 support-28.0.0 升级到 28.0.…","fields":{"slug":"/androidx-tablayout-ripple/"},"frontmatter":{"date":"October 24, 2018","title":"AndroidX TabLayout点击效果兼容问题","tags":["tabLayout"],"categories":"Android"}}}},"staticQueryHashes":["2841359383"]}
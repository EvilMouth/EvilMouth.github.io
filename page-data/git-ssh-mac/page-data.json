{"componentChunkName":"component---src-templates-blog-post-js","path":"/git-ssh-mac/","result":{"data":{"site":{"siteMetadata":{"title":"Evil Mouth"}},"markdownRemark":{"id":"36960a41-542e-50ca-96ba-9a130c6a0aaf","excerpt":"之前在mac配了多ssh key，一直用的很爽，然而前几天因为不当操作，导致ssh失效，一怒全部删除，准备重配的时候命令什么的已然忘记，还得再重新查，这记性，所以又是备忘录。 生成第一个ssh key 假设从来没有配过ssh，以下是生成默认key 1.配置git用户名以及邮箱 如果配置了全局git…","html":"<p>之前在mac配了多ssh key，一直用的很爽，然而前几天因为不当操作，导致ssh失效，一怒全部删除，准备重配的时候命令什么的已然忘记，还得再重新查，这记性，所以又是备忘录。</p>\n<!-- More -->\n<h2>生成第一个ssh key</h2>\n<p>假设从来没有配过ssh，以下是生成默认key</p>\n<h3>1.配置git用户名以及邮箱</h3>\n<p>如果配置了全局git用户名以及邮箱这一步可以跳过，也可以为每一个key都配置专属git用户名邮箱</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ git config user.name &quot;你的用户名&quot;\n$ git config user.email &quot;你的邮箱&quot;</code></pre></div>\n<p>在config后面加上<code class=\"language-text\">--global</code>即可设置全局，一劳永逸</p>\n<h3>2.生成ssh key</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ ssh-keygen -t rsa -C &quot;你的邮箱&quot;</code></pre></div>\n<p>然后一路回车即可，不要输入任何东西，就可以在根目录的<code class=\"language-text\">~/.ssh</code>目录下看到两个文件<code class=\"language-text\">id_rsa</code>、<code class=\"language-text\">id_rsa.pub</code>，其中pub后缀的文件里面的内容就是后面需要使用的key</p>\n<h3>3.上传key到Github</h3>\n<p>可以使用<code class=\"language-text\">clipcopy</code>命令，也可以自行打开文件复制</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ clipcopy &lt; ~/.ssh/id_rsa.pub</code></pre></div>\n<p>复制完内容后就是到Github个人设置里面添加SSH公匙</p>\n<h3>4.验证是否成功</h3>\n<p>在Github添加公匙后，就可以验证是否链接成功</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ ssh -T git@github.com</code></pre></div>\n<p>按提示输入yes并稍等片刻看到以下内容就是配置成功</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Hi 你的用户名! You&#39;ve successfully authenticated, but GitHub does not provide shell access.</code></pre></div>\n<h2>生成多个ssh key</h2>\n<p>现在有很多git仓库，所以配置一个ssh key是远远不够的，所以需要配置多个ssh key，但是继续使用上面步骤会覆盖之前配置的Github公匙，因为在生成的时候没有指定名称，所以这一步是关键，下面以gitlab实例</p>\n<h3>1.生成ssh key并指定名称</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ ssh-keygen -t rsa -f ~/.ssh/id_rsa.gitlab -C &quot;你的邮箱&quot;</code></pre></div>\n<p>然后继续一路回车，就可以在根目录的<code class=\"language-text\">~/.ssh</code>目录下看到两个文件<code class=\"language-text\">id_rsa_gitlab</code>、<code class=\"language-text\">id_rsa_gitlab.pub</code></p>\n<h3>2.新增并配置或修改config</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ touch ~/.ssh/config</code></pre></div>\n<p>并在config文件添加以下内容</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Host gitlab.com\n    IdentityFile ~/.ssh/id_rsa.gitlab</code></pre></div>\n<p>完整例子</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Host github.com\n    IdentityFile ~/.ssh/id_rsa.github\nHost gitlab.com\n    IdentityFile ~/.ssh/id_rsa.gitlab\nHost git.coding.net\n    IdentityFile ~/.ssh/id_rsa.coding</code></pre></div>\n<h3>3.上传<code class=\"language-text\">id_rsa_gitlab.pub</code>内容到gitlab公匙</h3>\n<h3>4.验证</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ ssh -T git@gitlab.com</code></pre></div>\n<p>看到以下内容表示配置成功</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Welcome to GitLab, 你的用户名!</code></pre></div>\n<p>之后再配置其它git的ssh key就继续重复上述步骤就可以了，重点就是指定名称和配置config文件</p>\n<h2>遇到带端口的git地址</h2>\n<p>如果公司自搭git服务器带有端口号，那么需要配置Port</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Host xxx.xxx.xxx\n    IdentityFile ~/.ssh/id_rsa.xxx\n    Port xxxx</code></pre></div>","frontmatter":{"title":"git本地多ssh key管理","date":"March 04, 2017","tags":["ssh"],"categories":"Git"}}},"pageContext":{"slug":"/git-ssh-mac/","previous":{"fields":{"slug":"/hexo-blog-carry/"},"frontmatter":{"title":"使用Hexo搭载博客"}},"next":{"fields":{"slug":"/maven-jcenter/"},"frontmatter":{"title":"上传项目到jcenter"}}}},"staticQueryHashes":["2841359383"]}
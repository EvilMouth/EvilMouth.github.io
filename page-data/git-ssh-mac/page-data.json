{"componentChunkName":"component---src-templates-blog-post-js","path":"/git-ssh-mac/","result":{"data":{"site":{"siteMetadata":{"title":"Evil Mouth","author":{"name":"Evil Mouth"}}},"markdownRemark":{"id":"36960a41-542e-50ca-96ba-9a130c6a0aaf","excerpt":"之前在 mac 配了多 ssh key，一直用的很爽，然而前几天因为不当操作，导致 ssh 失效，一怒全部删除，准备重配的时候命令什么的已然忘记，还得再重新查，这记性，所以又是备忘录。 生成第一个 ssh key 假设从来没有配过 ssh，以下是生成默认 key 1.配置 git 用户名以及邮箱 如果配置了全局 git…","html":"<p>之前在 mac 配了多 ssh key，一直用的很爽，然而前几天因为不当操作，导致 ssh 失效，一怒全部删除，准备重配的时候命令什么的已然忘记，还得再重新查，这记性，所以又是备忘录。</p>\n<!-- More -->\n<h2>生成第一个 ssh key</h2>\n<p>假设从来没有配过 ssh，以下是生成默认 key</p>\n<h3>1.配置 git 用户名以及邮箱</h3>\n<p>如果配置了全局 git 用户名以及邮箱这一步可以跳过，也可以为每一个 key 都配置专属 git 用户名邮箱</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ git config user.name &quot;你的用户名&quot;\n$ git config user.email &quot;你的邮箱&quot;</code></pre></div>\n<p>在 config 后面加上<code class=\"language-text\">--global</code>即可设置全局，一劳永逸</p>\n<h3>2.生成 ssh key</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ ssh-keygen -t rsa -C &quot;你的邮箱&quot;</code></pre></div>\n<p>然后一路回车即可，不要输入任何东西，就可以在根目录的<code class=\"language-text\">~/.ssh</code>目录下看到两个文件<code class=\"language-text\">id_rsa</code>、<code class=\"language-text\">id_rsa.pub</code>，其中 pub 后缀的文件里面的内容就是后面需要使用的 key</p>\n<h3>3.上传 key 到 Github</h3>\n<p>可以使用<code class=\"language-text\">clipcopy</code>命令，也可以自行打开文件复制</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ clipcopy &lt; ~/.ssh/id_rsa.pub</code></pre></div>\n<p>复制完内容后就是到 Github 个人设置里面添加 SSH 公匙</p>\n<h3>4.验证是否成功</h3>\n<p>在 Github 添加公匙后，就可以验证是否链接成功</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ ssh -T git@github.com</code></pre></div>\n<p>按提示输入 yes 并稍等片刻看到以下内容就是配置成功</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Hi 你的用户名! You&#39;ve successfully authenticated, but GitHub does not provide shell access.</code></pre></div>\n<h2>生成多个 ssh key</h2>\n<p>现在有很多 git 仓库，所以配置一个 ssh key 是远远不够的，所以需要配置多个 ssh key，但是继续使用上面步骤会覆盖之前配置的 Github 公匙，因为在生成的时候没有指定名称，所以这一步是关键，下面以 gitlab 实例</p>\n<h3>1.生成 ssh key 并指定名称</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ ssh-keygen -t rsa -f ~/.ssh/id_rsa.gitlab -C &quot;你的邮箱&quot;</code></pre></div>\n<p>然后继续一路回车，就可以在根目录的<code class=\"language-text\">~/.ssh</code>目录下看到两个文件<code class=\"language-text\">id_rsa_gitlab</code>、<code class=\"language-text\">id_rsa_gitlab.pub</code></p>\n<h3>2.新增并配置或修改 config</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ touch ~/.ssh/config</code></pre></div>\n<p>并在 config 文件添加以下内容</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Host gitlab.com\n    IdentityFile ~/.ssh/id_rsa.gitlab</code></pre></div>\n<p>完整例子</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Host github.com\n    IdentityFile ~/.ssh/id_rsa.github\nHost gitlab.com\n    IdentityFile ~/.ssh/id_rsa.gitlab\nHost git.coding.net\n    IdentityFile ~/.ssh/id_rsa.coding</code></pre></div>\n<h3>3.上传<code class=\"language-text\">id_rsa_gitlab.pub</code>内容到 gitlab 公匙</h3>\n<h3>4.验证</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ ssh -T git@gitlab.com</code></pre></div>\n<p>看到以下内容表示配置成功</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Welcome to GitLab, 你的用户名!</code></pre></div>\n<p>之后再配置其它 git 的 ssh key 就继续重复上述步骤就可以了，重点就是指定名称和配置 config 文件</p>\n<h2>遇到带端口的 git 地址</h2>\n<p>如果公司自搭 git 服务器带有端口号，那么需要配置 Port</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Host xxx.xxx.xxx\n    IdentityFile ~/.ssh/id_rsa.xxx\n    Port xxxx</code></pre></div>","frontmatter":{"title":"git本地多ssh key管理","date":"March 04, 2017","tags":["ssh"],"categories":"Git"}}},"pageContext":{"slug":"/git-ssh-mac/","previous":{"excerpt":"记录一下通过 Hexo 搭载个人博客过程，不得不说 Hexo 真的强大。 官方文档\nhttps://hexo.io/zh-cn/docs/index.html 安装前提 系统环境必须有 Node 和 Git https://nodejs.org/zh-cn/ https…","fields":{"slug":"/hexo-blog-carry/"},"frontmatter":{"date":"February 24, 2017","title":"使用Hexo搭载博客","tags":["blog","hexo"],"categories":"Blog"}},"next":{"excerpt":"记录一下开发发布项目到的过程 Android 开发过程中需要拉很多依赖，比如官方的库，通常都是一句话调用，非常方便\n 之前也使用过，比起方便很多，不过使用的人没有用的多，新建 Android 项目也不会自己配置，如果你想用，可以看这篇文章上传项目到 jitpack…","fields":{"slug":"/maven-jcenter/"},"frontmatter":{"date":"May 08, 2017","title":"上传项目到jcenter","tags":["jcenter"],"categories":"Maven"}}}},"staticQueryHashes":["2841359383"]}
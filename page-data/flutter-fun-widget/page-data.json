{"componentChunkName":"component---src-templates-blog-post-js","path":"/flutter-fun-widget/","result":{"data":{"site":{"siteMetadata":{"title":"Evil Mouth","author":{"name":"Evil Mouth"}}},"markdownRemark":{"id":"4ed845ac-31d5-5e9e-8947-536591e8d5c0","excerpt":"本文介绍日常开发中比较实用的 Flutter Widget Placeholder 占位图 常用在异步加载请求时先使用 Placeholder 代替显示，请求结束后替换 Form 表单 例如登陆页面，利用 Form Widget 将用户名和密码两个输入框包起来，通过 Key…","html":"<p>本文介绍日常开发中比较实用的 Flutter Widget</p>\n<h2>Placeholder 占位图</h2>\n<p>常用在异步加载请求时先使用 Placeholder 代替显示，请求结束后替换</p>\n<div class=\"gatsby-highlight\" data-language=\"dart\"><pre class=\"language-dart\"><code class=\"language-dart\"><span class=\"token keyword\">const</span> <span class=\"token function\">Placeholder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  Key key<span class=\"token punctuation\">,</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>color <span class=\"token operator\">=</span> <span class=\"token keyword\">const</span> <span class=\"token function\">Color</span><span class=\"token punctuation\">(</span><span class=\"token number\">0xFF455A64</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// BlueGrey 700</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>strokeWidth <span class=\"token operator\">=</span> <span class=\"token number\">2.0</span><span class=\"token punctuation\">,</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>fallbackWidth <span class=\"token operator\">=</span> <span class=\"token number\">400.0</span><span class=\"token punctuation\">,</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>fallbackHeight <span class=\"token operator\">=</span> <span class=\"token number\">400.0</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h2>Form 表单</h2>\n<p>例如登陆页面，利用 Form Widget 将用户名和密码两个输入框包起来，通过 Key 进行统一校验，还自带返回按键监听</p>\n<div class=\"gatsby-highlight\" data-language=\"dart\"><pre class=\"language-dart\"><code class=\"language-dart\"><span class=\"token keyword\">const</span> <span class=\"token function\">Form</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  Key key<span class=\"token punctuation\">,</span>\n  <span class=\"token metadata symbol\">@required</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>child<span class=\"token punctuation\">,</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>autovalidate <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 自动校验</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>onWillPop<span class=\"token punctuation\">,</span> <span class=\"token comment\">// 返回按键监听</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>onChanged<span class=\"token punctuation\">,</span> <span class=\"token comment\">// 表单内容变化</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<blockquote>\n<p>在 Form 里使用的输入框目前只提供 TextFormField 和 DropdownButtonFormField，两者都继承 FormField，可自行扩展</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"dart\"><pre class=\"language-dart\"><code class=\"language-dart\"><span class=\"token function\">Form</span><span class=\"token punctuation\">(</span>\n  key<span class=\"token punctuation\">:</span> _formKey<span class=\"token punctuation\">,</span> <span class=\"token comment\">// 通过key拿到FormState</span>\n  child<span class=\"token punctuation\">:</span> <span class=\"token function\">Column</span><span class=\"token punctuation\">(</span>\n    crossAxisAlignment<span class=\"token punctuation\">:</span> CrossAxisAlignment<span class=\"token punctuation\">.</span>start<span class=\"token punctuation\">,</span>\n    children<span class=\"token punctuation\">:</span> <span class=\"token operator\">&lt;</span>Widget<span class=\"token operator\">></span><span class=\"token punctuation\">[</span>\n      <span class=\"token function\">TextFormField</span><span class=\"token punctuation\">(</span>\n        decoration<span class=\"token punctuation\">:</span> <span class=\"token keyword\">const</span> <span class=\"token function\">InputDecoration</span><span class=\"token punctuation\">(</span>\n          hintText<span class=\"token punctuation\">:</span> <span class=\"token string\">'Enter your email'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        validator<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">.</span>isEmpty<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span> <span class=\"token string\">'Please enter your email'</span><span class=\"token punctuation\">;</span>\n          <span class=\"token punctuation\">}</span>\n          <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 表示无错误</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        onSaved<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          _formEmail <span class=\"token operator\">=</span> value<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      <span class=\"token comment\">//TODO 密码输入框同理</span>\n      <span class=\"token function\">Padding</span><span class=\"token punctuation\">(</span>\n        padding<span class=\"token punctuation\">:</span> <span class=\"token keyword\">const</span> EdgeInsets<span class=\"token punctuation\">.</span><span class=\"token function\">symmetric</span><span class=\"token punctuation\">(</span>vertical<span class=\"token punctuation\">:</span> <span class=\"token number\">16.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        child<span class=\"token punctuation\">:</span> <span class=\"token function\">RaisedButton</span><span class=\"token punctuation\">(</span>\n          onPressed<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token comment\">// Validate will return true if the form ivalid, or false if</span>\n            <span class=\"token comment\">// the form is invalid.</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>_formKey<span class=\"token punctuation\">.</span>currentState<span class=\"token punctuation\">.</span><span class=\"token function\">validate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n              <span class=\"token comment\">// Process data.</span>\n              _formKey<span class=\"token punctuation\">.</span>currentState<span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 触发FormField#onSaved回调</span>\n            <span class=\"token punctuation\">}</span>\n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n          child<span class=\"token punctuation\">:</span> <span class=\"token function\">Text</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Submit'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">)</span></code></pre></div>\n<h3>FormField 为何要被包在 Form 里面</h3>\n<p>Form 是个 StatefuleWidget，state 是 FormState，FormState 提供了一些操作 FormField 的方法，比如 validate、save。如何获取呢，原因在 FormField 的 build()方法内向上获取到 Form，并将自己注册给 Form</p>\n<div class=\"gatsby-highlight\" data-language=\"dart\"><pre class=\"language-dart\"><code class=\"language-dart\"><span class=\"token metadata symbol\">@override</span>\nWidget <span class=\"token function\">build</span><span class=\"token punctuation\">(</span>BuildContext context<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  Form<span class=\"token punctuation\">.</span><span class=\"token function\">of</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">)</span><span class=\"token operator\">?</span><span class=\"token punctuation\">.</span><span class=\"token function\">_register</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 将自己注册给Form</span>\n  <span class=\"token keyword\">return</span> widget<span class=\"token punctuation\">.</span><span class=\"token function\">builder</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<blockquote>\n<p>Form.of 是什么，这就要讲到 Flutter 的 InheritedWidget，InheritedWidget 是一个方便子 Widget 获取父 Widget 提供的属性的 Widget。Theme.of、Local.of 都是基于 InheritedWidget</p>\n</blockquote>\n<h2>FutureBuilder 支持异步加载的 Widget</h2>\n<p>一般如何实现异步加载动态更新布局，自然是通过 setState 改变状态。FutureBuilder 就是这么一个封装的 Widget，应用在比较单一、一次性的场景</p>\n<div class=\"gatsby-highlight\" data-language=\"dart\"><pre class=\"language-dart\"><code class=\"language-dart\"><span class=\"token keyword\">const</span> <span class=\"token function\">FutureBuilder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  Key key<span class=\"token punctuation\">,</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>future<span class=\"token punctuation\">,</span> <span class=\"token comment\">// 异步任务</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>initialData<span class=\"token punctuation\">,</span> <span class=\"token comment\">// 初始数据，不是必要</span>\n  <span class=\"token metadata symbol\">@required</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>builder<span class=\"token punctuation\">,</span> <span class=\"token comment\">// Widget构建</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"dart\"><pre class=\"language-dart\"><code class=\"language-dart\">FutureBuilder<span class=\"token operator\">&lt;</span>String<span class=\"token operator\">></span><span class=\"token punctuation\">(</span>\n  future<span class=\"token punctuation\">:</span> Future<span class=\"token punctuation\">.</span><span class=\"token function\">delayed</span><span class=\"token punctuation\">(</span>\n      <span class=\"token function\">Duration</span><span class=\"token punctuation\">(</span>seconds<span class=\"token punctuation\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token string\">'this is data from net'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  builder<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">,</span> snapshot<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>snapshot<span class=\"token punctuation\">.</span>connectionState <span class=\"token operator\">==</span> ConnectionState<span class=\"token punctuation\">.</span>done<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>snapshot<span class=\"token punctuation\">.</span>hasError<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">Text</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Error: ${snapshot.error}\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 加载失败</span>\n      <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">Text</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Contents: ${snapshot.data}\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 加载成功</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> <span class=\"token function\">CircularProgressIndicator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 加载中</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">)</span></code></pre></div>\n<blockquote>\n<p>builder 会回调多次，原因就是 snapshot 是一个状态，会改变多次</p>\n</blockquote>\n<h2>WillPopScope 监听 Android 返回按钮</h2>\n<p>Android 才需要的返回按键监听，例如应用在双击返回键退出应用等操作</p>\n<blockquote>\n<p>上面介绍的 Form 也有一个 onWillPop 属性，其实就是包了一层 WillPopScope</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"dart\"><pre class=\"language-dart\"><code class=\"language-dart\"><span class=\"token keyword\">const</span> <span class=\"token function\">WillPopScope</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  Key key<span class=\"token punctuation\">,</span>\n  <span class=\"token metadata symbol\">@required</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>child<span class=\"token punctuation\">,</span>\n  <span class=\"token metadata symbol\">@required</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>onWillPop<span class=\"token punctuation\">,</span> <span class=\"token comment\">// Future&lt;bool> Function()</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>下面的例子通过 WillPopScope 包裹 AlertDialog 来实现一个无法通过返回按键取消的弹窗，只需要 onWillPop 返回 flase 即表示屏蔽返回</p>\n<div class=\"gatsby-highlight\" data-language=\"dart\"><pre class=\"language-dart\"><code class=\"language-dart\"><span class=\"token function\">showDialog</span><span class=\"token punctuation\">(</span>\n  context<span class=\"token punctuation\">:</span> context<span class=\"token punctuation\">,</span>\n  barrierDismissible<span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n  builder<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">WillPopScope</span><span class=\"token punctuation\">(</span>\n      onWillPop<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">async</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n      child<span class=\"token punctuation\">:</span> <span class=\"token function\">AlertDialog</span><span class=\"token punctuation\">(</span>\n        title<span class=\"token punctuation\">:</span> <span class=\"token function\">Text</span><span class=\"token punctuation\">(</span><span class=\"token string\">'弹窗标题'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        content<span class=\"token punctuation\">:</span> <span class=\"token function\">Text</span><span class=\"token punctuation\">(</span><span class=\"token string\">'只能通过关闭按钮关闭'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        actions<span class=\"token punctuation\">:</span> <span class=\"token operator\">&lt;</span>Widget<span class=\"token operator\">></span><span class=\"token punctuation\">[</span>\n          <span class=\"token function\">FlatButton</span><span class=\"token punctuation\">(</span>\n            onPressed<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n              Navigator<span class=\"token punctuation\">.</span><span class=\"token function\">of</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">pop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            child<span class=\"token punctuation\">:</span> <span class=\"token function\">Text</span><span class=\"token punctuation\">(</span><span class=\"token string\">'关闭'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n          <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">)</span></code></pre></div>\n<h2>Overlay 实现悬浮按钮</h2>\n<blockquote>\n<p>Flutter 的路由实际就是用 Overlay 实现</p>\n<p>可以理解为 Flutter 的世界只有一个 Activity，不同的 Page 其实就是 Fragment 堆叠</p>\n<p>所以在 Flutter 实现全局悬浮按钮简直不要太简单</p>\n</blockquote>\n<blockquote>\n<p>Overlay 跟着 Navigator 一起被创建，所以通过直接 Overlay.of 取得 OverlayState</p>\n</blockquote>\n<p>下面的例子展示如何悬浮一个全局按钮</p>\n<div class=\"gatsby-highlight\" data-language=\"dart\"><pre class=\"language-dart\"><code class=\"language-dart\"><span class=\"token metadata symbol\">@override</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">initState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">initState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  Future<span class=\"token punctuation\">.</span><span class=\"token function\">delayed</span><span class=\"token punctuation\">(</span><span class=\"token function\">Duration</span><span class=\"token punctuation\">(</span>seconds<span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    Overlay<span class=\"token punctuation\">.</span><span class=\"token function\">of</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">insert</span><span class=\"token punctuation\">(</span>floatingView<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 插入</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">final</span> floatingView <span class=\"token operator\">=</span> <span class=\"token function\">OverlayEntry</span><span class=\"token punctuation\">(</span>builder<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">// OverlayEntry</span>\n  <span class=\"token keyword\">return</span> <span class=\"token function\">FloatingView</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 悬浮按钮</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">FloatingView</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">StatelessWidget</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token metadata symbol\">@override</span>\n  Widget <span class=\"token function\">build</span><span class=\"token punctuation\">(</span>BuildContext context<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    double size <span class=\"token operator\">=</span> <span class=\"token number\">50</span><span class=\"token punctuation\">;</span>\n    double left <span class=\"token operator\">=</span> MediaQuery<span class=\"token punctuation\">.</span><span class=\"token function\">of</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">.</span>width <span class=\"token operator\">/</span> <span class=\"token number\">4</span> <span class=\"token operator\">-</span> size <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n    double top <span class=\"token operator\">=</span> MediaQuery<span class=\"token punctuation\">.</span><span class=\"token function\">of</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">.</span>height <span class=\"token operator\">/</span> <span class=\"token number\">1.5</span> <span class=\"token operator\">-</span> size <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">ChangeNotifierProvider</span><span class=\"token punctuation\">(</span>\n      create<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token function\">_PositionProvider</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">,</span> left<span class=\"token punctuation\">,</span> top<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      child<span class=\"token punctuation\">:</span> <span class=\"token function\">_PositionObserver</span><span class=\"token punctuation\">(</span>\n        child<span class=\"token punctuation\">:</span> <span class=\"token function\">_PositionConsumer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<blockquote>\n<p>如果需要移除，floatingView.remove()</p>\n<p>利用 insert 和 remove 即可实现 Flutter 层面的 Toast</p>\n</blockquote>\n<h2>AbsorbPointer 快速禁止屏幕点击</h2>\n<p>通过 AbsorbPointer 包裹住 RaisedButton，即使 RaisedButton 声明了点击事件，但是 AbsorbPointer 也声明了 absorbing: true，所有 RaisedButton 是点不了的</p>\n<div class=\"gatsby-highlight\" data-language=\"dart\"><pre class=\"language-dart\"><code class=\"language-dart\"><span class=\"token function\">AbsorbPointer</span><span class=\"token punctuation\">(</span>\n  absorbing<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 是否吸收触摸事件</span>\n  child<span class=\"token punctuation\">:</span> <span class=\"token function\">RaisedButton</span><span class=\"token punctuation\">(</span>onPressed<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">)</span></code></pre></div>\n<blockquote>\n<p>Navigator 其实也包裹了一层 AbsorbPointer，在路由跳转过程，会吸收所有屏幕触摸事件，让跳转完成</p>\n</blockquote>\n<h2>Dismissible 列表 Item 滑动移除</h2>\n<p>用来实现滑动删除场景</p>\n<div class=\"gatsby-highlight\" data-language=\"dart\"><pre class=\"language-dart\"><code class=\"language-dart\">ListView<span class=\"token punctuation\">.</span><span class=\"token function\">builder</span><span class=\"token punctuation\">(</span>\n  itemCount<span class=\"token punctuation\">:</span> _funItems<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">,</span>\n  itemBuilder<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">Dismissible</span><span class=\"token punctuation\">(</span>\n      key<span class=\"token punctuation\">:</span> <span class=\"token function\">ValueKey</span><span class=\"token punctuation\">(</span>_funItems<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      child<span class=\"token punctuation\">:</span> <span class=\"token function\">Container</span><span class=\"token punctuation\">(</span>\n        color<span class=\"token punctuation\">:</span> Colors<span class=\"token punctuation\">.</span>green<span class=\"token punctuation\">,</span>\n        child<span class=\"token punctuation\">:</span> <span class=\"token function\">ListTile</span><span class=\"token punctuation\">(</span>\n          title<span class=\"token punctuation\">:</span> <span class=\"token function\">Text</span><span class=\"token punctuation\">(</span>_funItems<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      background<span class=\"token punctuation\">:</span> <span class=\"token function\">Container</span><span class=\"token punctuation\">(</span> <span class=\"token comment\">// 右滑背景</span>\n        color<span class=\"token punctuation\">:</span> Colors<span class=\"token punctuation\">.</span>blue<span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      secondaryBackground<span class=\"token punctuation\">:</span> <span class=\"token function\">Container</span><span class=\"token punctuation\">(</span> <span class=\"token comment\">// 左滑背景</span>\n        color<span class=\"token punctuation\">:</span> Colors<span class=\"token punctuation\">.</span>red<span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      onDismissed<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>decoration<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          _funItems<span class=\"token punctuation\">.</span><span class=\"token function\">removeAt</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">)</span></code></pre></div>\n<h2>Hero 图片过渡效果</h2>\n<p>在 Android 21 以上，可以通过给 View 设置一个 flag 来让页面跳转时两个 View 直接有个过渡效果，通常用于浏览大图。在 Flutter 也是类似</p>\n<div class=\"gatsby-highlight\" data-language=\"dart\"><pre class=\"language-dart\"><code class=\"language-dart\"><span class=\"token keyword\">const</span> <span class=\"token function\">Hero</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  Key key<span class=\"token punctuation\">,</span>\n  <span class=\"token metadata symbol\">@required</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>tag<span class=\"token punctuation\">,</span> <span class=\"token comment\">// String 标记</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>createRectTween<span class=\"token punctuation\">,</span> <span class=\"token comment\">// 过渡动画，默认为MaterialRectArcTween</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>flightShuttleBuilder<span class=\"token punctuation\">,</span> <span class=\"token comment\">// 允许过渡中不使用child</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>placeholderBuilder<span class=\"token punctuation\">,</span> <span class=\"token comment\">// 占位</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>transitionOnUserGestures <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// iOS滑动返回时是否也过渡</span>\n  <span class=\"token metadata symbol\">@required</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>child<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"dart\"><pre class=\"language-dart\"><code class=\"language-dart\"><span class=\"token function\">Hero</span><span class=\"token punctuation\">(</span>\n  tag<span class=\"token punctuation\">:</span> <span class=\"token string\">'hero'</span><span class=\"token punctuation\">,</span>\n  child<span class=\"token punctuation\">:</span> Image<span class=\"token punctuation\">.</span><span class=\"token function\">asset</span><span class=\"token punctuation\">(</span><span class=\"token string\">'images/ic_launcher.png'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">)</span></code></pre></div>\n<blockquote>\n<p>只需要将 Image 包裹在 Hero 中并提供一个 tag，在第二个页面同样标记，剩下的就交给 Flutter 帮我们实现过渡</p>\n</blockquote>\n<h2>FractionallySizedBox 屏幕百分比</h2>\n<p>通常用在某些 Widget 需要撑满屏幕</p>\n<div class=\"gatsby-highlight\" data-language=\"dart\"><pre class=\"language-dart\"><code class=\"language-dart\"><span class=\"token keyword\">const</span> <span class=\"token function\">FractionallySizedBox</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  Key key<span class=\"token punctuation\">,</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>alignment <span class=\"token operator\">=</span> Alignment<span class=\"token punctuation\">.</span>center<span class=\"token punctuation\">,</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>widthFactor<span class=\"token punctuation\">,</span> <span class=\"token comment\">// 0-1 1表示撑满</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>heightFactor<span class=\"token punctuation\">,</span>\n  Widget child<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h2>SizeBox 控制 Widget 大小</h2>\n<p>字面意思，向父 Widget 申请一定大小的空间</p>\n<div class=\"gatsby-highlight\" data-language=\"dart\"><pre class=\"language-dart\"><code class=\"language-dart\"><span class=\"token function\">SizeBox</span><span class=\"token punctuation\">(</span>width<span class=\"token punctuation\">:</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> height<span class=\"token punctuation\">:</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> child<span class=\"token punctuation\">:</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span></code></pre></div>\n<ul>\n<li>充当两个 Widget 直接的 Margin</li>\n<li>控制 Widget 大小</li>\n</ul>\n<h2>Transform 改变 Widget 形态</h2>\n<p>与 Android 的作用一致，可以对 Widget 进行形态上的改变，比如伪 3D 旋转</p>\n<div class=\"gatsby-highlight\" data-language=\"dart\"><pre class=\"language-dart\"><code class=\"language-dart\"><span class=\"token function\">Transform</span><span class=\"token punctuation\">(</span>\n  alignment<span class=\"token punctuation\">:</span> Alignment<span class=\"token punctuation\">.</span>topRight<span class=\"token punctuation\">,</span>\n  transform<span class=\"token punctuation\">:</span> Matrix4<span class=\"token punctuation\">.</span><span class=\"token function\">skewY</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token function\">rotateZ</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">3.1415926</span> <span class=\"token operator\">/</span> <span class=\"token number\">12.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  child<span class=\"token punctuation\">:</span> <span class=\"token function\">Container</span><span class=\"token punctuation\">(</span>\n    padding<span class=\"token punctuation\">:</span> <span class=\"token keyword\">const</span> EdgeInsets<span class=\"token punctuation\">.</span><span class=\"token function\">all</span><span class=\"token punctuation\">(</span><span class=\"token number\">8.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    color<span class=\"token punctuation\">:</span> <span class=\"token keyword\">const</span> <span class=\"token function\">Color</span><span class=\"token punctuation\">(</span><span class=\"token number\">0xFFE8581C</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    child<span class=\"token punctuation\">:</span> <span class=\"token keyword\">const</span> <span class=\"token function\">Text</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Apartment for rent!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">)</span></code></pre></div>\n<h2>IndexStack 快速切换 Widget</h2>\n<p>例如某个 Widget 拥有很多种状态，每个状态不同的 Icon，通过 IndexStack 先将所有 Icon 提供，通过改变 index 快速切换 Icon</p>\n<div class=\"gatsby-highlight\" data-language=\"dart\"><pre class=\"language-dart\"><code class=\"language-dart\"><span class=\"token function\">IndexedStack</span><span class=\"token punctuation\">(</span>\n  index<span class=\"token punctuation\">:</span> _indexStackIndex<span class=\"token punctuation\">,</span>\n  children<span class=\"token punctuation\">:</span> <span class=\"token operator\">&lt;</span>Widget<span class=\"token operator\">></span><span class=\"token punctuation\">[</span>\n    <span class=\"token function\">Icon</span><span class=\"token punctuation\">(</span>Icons<span class=\"token punctuation\">.</span>star<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">Icon</span><span class=\"token punctuation\">(</span>Icons<span class=\"token punctuation\">.</span>account_box<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">Icon</span><span class=\"token punctuation\">(</span>Icons<span class=\"token punctuation\">.</span>cake<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">)</span></code></pre></div>\n<blockquote>\n<p>IndexedStack 继承 Stack，并重写了其渲染部分，只渲染 index 命中的 Icon</p>\n</blockquote>\n<h2>Wrap 流式布局</h2>\n<blockquote>\n<p>Wrap 基本与 Row/Column 一致，不同的一点是当 children 超出范围的话，Wrap 会自动将超出的 chilren 换行</p>\n</blockquote>\n<p>下面的例子中第三第四个 Chip 后被 layout 在第二行</p>\n<div class=\"gatsby-highlight\" data-language=\"dart\"><pre class=\"language-dart\"><code class=\"language-dart\"><span class=\"token function\">Wrap</span><span class=\"token punctuation\">(</span>\n  spacing<span class=\"token punctuation\">:</span> <span class=\"token number\">8.0</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// gap between adjacent chips</span>\n  runSpacing<span class=\"token punctuation\">:</span> <span class=\"token number\">4.0</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// gap between lines</span>\n  children<span class=\"token punctuation\">:</span> <span class=\"token operator\">&lt;</span>Widget<span class=\"token operator\">></span><span class=\"token punctuation\">[</span>\n    <span class=\"token function\">Chip</span><span class=\"token punctuation\">(</span>\n      avatar<span class=\"token punctuation\">:</span> <span class=\"token function\">CircleAvatar</span><span class=\"token punctuation\">(</span>\n          backgroundColor<span class=\"token punctuation\">:</span> Colors<span class=\"token punctuation\">.</span>blue<span class=\"token punctuation\">.</span>shade900<span class=\"token punctuation\">,</span> child<span class=\"token punctuation\">:</span> <span class=\"token function\">Text</span><span class=\"token punctuation\">(</span><span class=\"token string\">'AH'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      label<span class=\"token punctuation\">:</span> <span class=\"token function\">Text</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Hamilton'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">Chip</span><span class=\"token punctuation\">(</span>\n      avatar<span class=\"token punctuation\">:</span> <span class=\"token function\">CircleAvatar</span><span class=\"token punctuation\">(</span>\n          backgroundColor<span class=\"token punctuation\">:</span> Colors<span class=\"token punctuation\">.</span>blue<span class=\"token punctuation\">.</span>shade900<span class=\"token punctuation\">,</span> child<span class=\"token punctuation\">:</span> <span class=\"token function\">Text</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ML'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      label<span class=\"token punctuation\">:</span> <span class=\"token function\">Text</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Lafayette'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">Chip</span><span class=\"token punctuation\">(</span>\n      avatar<span class=\"token punctuation\">:</span> <span class=\"token function\">CircleAvatar</span><span class=\"token punctuation\">(</span>\n          backgroundColor<span class=\"token punctuation\">:</span> Colors<span class=\"token punctuation\">.</span>blue<span class=\"token punctuation\">.</span>shade900<span class=\"token punctuation\">,</span> child<span class=\"token punctuation\">:</span> <span class=\"token function\">Text</span><span class=\"token punctuation\">(</span><span class=\"token string\">'HM'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      label<span class=\"token punctuation\">:</span> <span class=\"token function\">Text</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Mulligan'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">Chip</span><span class=\"token punctuation\">(</span>\n      avatar<span class=\"token punctuation\">:</span> <span class=\"token function\">CircleAvatar</span><span class=\"token punctuation\">(</span>\n          backgroundColor<span class=\"token punctuation\">:</span> Colors<span class=\"token punctuation\">.</span>blue<span class=\"token punctuation\">.</span>shade900<span class=\"token punctuation\">,</span> child<span class=\"token punctuation\">:</span> <span class=\"token function\">Text</span><span class=\"token punctuation\">(</span><span class=\"token string\">'JL'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      label<span class=\"token punctuation\">:</span> <span class=\"token function\">Text</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Laurens'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">)</span></code></pre></div>\n<h2>PageView Android 下的 ViewPager</h2>\n<p>估计是开发中最常用到的控件了，具体效果可以看 Demo</p>\n<p>在 Flutter 中，通过 PageView+BottomNavigationBar 实现</p>\n<div class=\"gatsby-highlight\" data-language=\"dart\"><pre class=\"language-dart\"><code class=\"language-dart\">body<span class=\"token punctuation\">:</span> <span class=\"token function\">PageView</span><span class=\"token punctuation\">(</span> <span class=\"token comment\">// 类似ViewPager</span>\n  physics<span class=\"token punctuation\">:</span> <span class=\"token function\">NeverScrollableScrollPhysics</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 禁止左右滑动</span>\n  controller<span class=\"token punctuation\">:</span> _controller<span class=\"token punctuation\">,</span>\n  children<span class=\"token punctuation\">:</span> <span class=\"token operator\">&lt;</span>Widget<span class=\"token operator\">></span><span class=\"token punctuation\">[</span> <span class=\"token comment\">// 类似Fragment</span>\n    <span class=\"token function\">_DemoHomePageView</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">_DemoHomeMyPageView</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  onPageChanged<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      _selectedIndex <span class=\"token operator\">=</span> index<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 改变_selectedIndex是为了更新BottomNavigationBar的选中状态</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">)</span>\n\nbottomNavigationBar<span class=\"token punctuation\">:</span> <span class=\"token function\">BottomNavigationBar</span><span class=\"token punctuation\">(</span>\n  items<span class=\"token punctuation\">:</span> <span class=\"token keyword\">const</span> <span class=\"token operator\">&lt;</span>BottomNavigationBarItem<span class=\"token operator\">></span><span class=\"token punctuation\">[</span>\n    <span class=\"token function\">BottomNavigationBarItem</span><span class=\"token punctuation\">(</span>\n      icon<span class=\"token punctuation\">:</span> <span class=\"token function\">Icon</span><span class=\"token punctuation\">(</span>Icons<span class=\"token punctuation\">.</span>home<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      title<span class=\"token punctuation\">:</span> <span class=\"token function\">Text</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Home'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">BottomNavigationBarItem</span><span class=\"token punctuation\">(</span>\n      icon<span class=\"token punctuation\">:</span> <span class=\"token function\">Icon</span><span class=\"token punctuation\">(</span>Icons<span class=\"token punctuation\">.</span>person<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      title<span class=\"token punctuation\">:</span> <span class=\"token function\">Text</span><span class=\"token punctuation\">(</span><span class=\"token string\">'My'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  currentIndex<span class=\"token punctuation\">:</span> _selectedIndex<span class=\"token punctuation\">,</span>\n  selectedItemColor<span class=\"token punctuation\">:</span> Colors<span class=\"token punctuation\">.</span>amber<span class=\"token punctuation\">[</span><span class=\"token number\">800</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  onTap<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      _selectedIndex <span class=\"token operator\">=</span> index<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    _controller<span class=\"token punctuation\">.</span><span class=\"token function\">jumpToPage</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 类似ViewPager.setCurrentPosition</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">)</span></code></pre></div>\n<blockquote>\n<p>PageView 是默认不保活的，可以将_DemoHomePageView 混入 AutomaticKeepAliveClientMixin 并保证 build 方法调用 super</p>\n</blockquote>\n<blockquote>\n<p>混入 mixin 是什么，可以看 dart 语法，不同于 java 单继承，dart 的 mixin 可以扩展属性和方法</p>\n</blockquote>\n<h2>Texture 相机</h2>\n<p>像相机这种需要实时传输大量图像数据的，Flutter 提供了 Texture，通过映射共享数据的工具</p>\n<div class=\"gatsby-highlight\" data-language=\"dart\"><pre class=\"language-dart\"><code class=\"language-dart\"><span class=\"token keyword\">const</span> <span class=\"token function\">Texture</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  Key key<span class=\"token punctuation\">,</span>\n  <span class=\"token metadata symbol\">@required</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>textureId<span class=\"token punctuation\">,</span> <span class=\"token comment\">// 通过该id获得共享的图像数据</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>filterQuality <span class=\"token operator\">=</span> FilterQuality<span class=\"token punctuation\">.</span>low<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>下面是一个相机例子</p>\n<div class=\"gatsby-highlight\" data-language=\"dart\"><pre class=\"language-dart\"><code class=\"language-dart\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">_TextureBodyState</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">State</span><span class=\"token operator\">&lt;</span>TextureBody<span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n  List<span class=\"token operator\">&lt;</span>CameraDescription<span class=\"token operator\">></span> cameras<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 可用的相机集合</span>\n  CameraController cameraController<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 相机控制中枢</span>\n\n  bool <span class=\"token keyword\">get</span> isInit <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token punctuation\">(</span>cameraController<span class=\"token operator\">?</span><span class=\"token punctuation\">.</span>value<span class=\"token operator\">?</span><span class=\"token punctuation\">.</span>isInitialized <span class=\"token operator\">==</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">/// 生成一个文件路径</span>\n  Future<span class=\"token operator\">&lt;</span>String<span class=\"token operator\">></span> <span class=\"token keyword\">get</span> tempFilePath <span class=\"token keyword\">async</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">final</span> cacheDir <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">getTemporaryDirectory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">final</span> dirPath <span class=\"token operator\">=</span> <span class=\"token string\">'${cacheDir.path}/Picture'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">await</span> <span class=\"token function\">Directory</span><span class=\"token punctuation\">(</span>dirPath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span>recursive<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">'$dirPath/${DateTime.now().millisecondsSinceEpoch.toString()}.jpg'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  String latestPicturePath<span class=\"token punctuation\">;</span>\n\n  <span class=\"token metadata symbol\">@override</span>\n  <span class=\"token keyword\">void</span> <span class=\"token function\">initState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">initState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">_fetchCameras</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">_fetchCameras</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">{</span>\n    cameras <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">availableCameras</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>cameras<span class=\"token punctuation\">.</span>isNotEmpty<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      cameraController <span class=\"token operator\">=</span> <span class=\"token function\">CameraController</span><span class=\"token punctuation\">(</span>cameras<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> ResolutionPreset<span class=\"token punctuation\">.</span>medium<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">await</span> cameraController<span class=\"token punctuation\">.</span><span class=\"token function\">initialize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>mounted<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token metadata symbol\">@override</span>\n  <span class=\"token keyword\">void</span> <span class=\"token function\">dispose</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    cameraController<span class=\"token operator\">?</span><span class=\"token punctuation\">.</span><span class=\"token function\">dispose</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">dispose</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token metadata symbol\">@override</span>\n  Widget <span class=\"token function\">build</span><span class=\"token punctuation\">(</span>BuildContext context<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>isInit<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> <span class=\"token function\">Container</span><span class=\"token punctuation\">(</span>\n        child<span class=\"token punctuation\">:</span> <span class=\"token function\">Center</span><span class=\"token punctuation\">(</span>\n          child<span class=\"token punctuation\">:</span> <span class=\"token function\">CircularProgressIndicator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">Container</span><span class=\"token punctuation\">(</span>\n      child<span class=\"token punctuation\">:</span> <span class=\"token function\">Column</span><span class=\"token punctuation\">(</span>\n        crossAxisAlignment<span class=\"token punctuation\">:</span> CrossAxisAlignment<span class=\"token punctuation\">.</span>start<span class=\"token punctuation\">,</span>\n        children<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n          <span class=\"token function\">AspectRatio</span><span class=\"token punctuation\">(</span>\n            aspectRatio<span class=\"token punctuation\">:</span> cameraController<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">.</span>aspectRatio<span class=\"token punctuation\">,</span>\n            child<span class=\"token punctuation\">:</span> <span class=\"token function\">CameraPreview</span><span class=\"token punctuation\">(</span>cameraController<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n          <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n          <span class=\"token function\">Expanded</span><span class=\"token punctuation\">(</span>\n            child<span class=\"token punctuation\">:</span> <span class=\"token function\">Row</span><span class=\"token punctuation\">(</span>\n              children<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n                <span class=\"token function\">Expanded</span><span class=\"token punctuation\">(</span>\n                  child<span class=\"token punctuation\">:</span> <span class=\"token function\">Center</span><span class=\"token punctuation\">(</span>\n                    child<span class=\"token punctuation\">:</span> latestPicturePath <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span>\n                        <span class=\"token operator\">?</span> <span class=\"token function\">SizedBox</span><span class=\"token punctuation\">(</span>\n                            width<span class=\"token punctuation\">:</span> <span class=\"token number\">80</span><span class=\"token punctuation\">,</span>\n                            height<span class=\"token punctuation\">:</span> <span class=\"token number\">160</span><span class=\"token punctuation\">,</span>\n                            child<span class=\"token punctuation\">:</span>\n                                Image<span class=\"token punctuation\">.</span><span class=\"token function\">file</span><span class=\"token punctuation\">(</span><span class=\"token function\">File</span><span class=\"token punctuation\">(</span>latestPicturePath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">preview</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                          <span class=\"token punctuation\">)</span>\n                        <span class=\"token punctuation\">:</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span>\n                  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                <span class=\"token function\">Expanded</span><span class=\"token punctuation\">(</span>\n                  child<span class=\"token punctuation\">:</span> <span class=\"token function\">Center</span><span class=\"token punctuation\">(</span>\n                    child<span class=\"token punctuation\">:</span> <span class=\"token function\">IconButton</span><span class=\"token punctuation\">(</span>\n                      icon<span class=\"token punctuation\">:</span> <span class=\"token function\">Icon</span><span class=\"token punctuation\">(</span>Icons<span class=\"token punctuation\">.</span>camera_alt<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                      onPressed<span class=\"token punctuation\">:</span> isInit\n                          <span class=\"token operator\">?</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">{</span>\n                              <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>cameraController<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">.</span>isTakingPicture<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                                <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n                              <span class=\"token punctuation\">}</span>\n                              <span class=\"token keyword\">final</span> filePath <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> tempFilePath<span class=\"token punctuation\">;</span>\n                              <span class=\"token keyword\">await</span> cameraController<span class=\"token punctuation\">.</span><span class=\"token function\">takePicture</span><span class=\"token punctuation\">(</span>filePath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 拍照</span>\n                              <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>mounted<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                                <span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                                  latestPicturePath <span class=\"token operator\">=</span> filePath<span class=\"token punctuation\">;</span>\n                                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                              <span class=\"token punctuation\">}</span>\n                            <span class=\"token punctuation\">}</span>\n                          <span class=\"token punctuation\">:</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                <span class=\"token function\">Spacer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n              <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n          <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2>PlatformView WebView</h2>\n<p>像 WebView 这种极其复杂的原生控件，用 Flutter 重新写不太现实，所以 Flutter 也提供这样一种 Widget，将原生控件直接嵌入 Flutter 的 Widget 树。</p>\n<p>官方已经提供 WebView 库帮我们代理了原生 WebView</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">webview_flutter</span><span class=\"token punctuation\">:</span> ^0.3.22+1</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"dart\"><pre class=\"language-dart\"><code class=\"language-dart\"><span class=\"token function\">WebView</span><span class=\"token punctuation\">(</span>\n    initialUrl<span class=\"token punctuation\">:</span> widget<span class=\"token punctuation\">.</span>url<span class=\"token punctuation\">,</span>\n    javascriptMode<span class=\"token punctuation\">:</span> JavascriptMode<span class=\"token punctuation\">.</span>unrestricted<span class=\"token punctuation\">,</span> <span class=\"token comment\">// 支持js</span>\n    onWebViewCreated<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>webViewController<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      _controller<span class=\"token punctuation\">.</span><span class=\"token function\">complete</span><span class=\"token punctuation\">(</span>webViewController<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    javascriptChannels<span class=\"token punctuation\">:</span> <span class=\"token operator\">&lt;</span>JavascriptChannel<span class=\"token operator\">></span><span class=\"token punctuation\">[</span>\n      <span class=\"token function\">_toasterJavascriptChannel</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// js通信</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">toSet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    onPageStarted<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>String url<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Page started loading: $url'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    onPageFinished<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>String url<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Page finished loading: $url'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">)</span></code></pre></div>","frontmatter":{"title":"Fun Flutter Widget","date":"August 14, 2020","tags":["flutter","widget"],"categories":"Flutter"}}},"pageContext":{"slug":"/flutter-fun-widget/","previous":{"excerpt":"主要列举 Android 常用的 View 对应 Flutter 的 Widget TextView - Text 富文本 在 Android 实现，比如部分文字是可点击的、不同颜色的，是通过 Spannable 实现，而在 Flutter 通过组合 TextSpan…","fields":{"slug":"/flutter-widget-different-from-android-view/"},"frontmatter":{"date":"August 13, 2020","title":"Android View - Flutter Widget","tags":["flutter","widget"],"categories":"Flutter"}},"next":{"excerpt":"Flutter 状态管理介绍 State 是什么 与 Android 不同之处 在 Android，比如想要动态改变一个 TextView 的 text，则需要在通过 id 获取 TextView，并通过 TextView 提供的 setText(newText…","fields":{"slug":"/flutter-state/"},"frontmatter":{"date":"August 14, 2020","title":"Flutter State","tags":["flutter","state","source"],"categories":"Flutter"}}}},"staticQueryHashes":["2841359383"]}
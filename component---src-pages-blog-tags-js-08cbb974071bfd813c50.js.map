{"version":3,"sources":["webpack:///./src/pages/blog/tags.js","webpack:///./src/pages/blog/tags.module.css"],"names":["Tags","tagsDiv","data","location","siteTitle","site","siteMetadata","author","name","tagsMap","allMarkdownRemark","edges","forEach","post","tags","node","frontmatter","tag","times","undefined","Object","entries","length","className","tagStyles","cloud","map","size","key","to","style","fontSize","title","linkTo","description","pageQuery","module","exports"],"mappings":"2FAAA,mIA0DeA,UAlDF,SAAC,GAAwB,IAkBhCC,EAlBUC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACdC,EAAeF,EAAKG,KAAKC,aAAaC,OAAOC,KAApC,UAGTC,EAAU,GAsChB,OArCcP,EAAKQ,kBAAkBC,MAC/BC,SAAQ,SAAAC,GACZ,IAAMC,EAAOD,EAAKE,KAAKC,YAAYF,KACnC,GAAa,OAATA,EAAe,OAAO,EAC1BA,EAAKF,SAAQ,SAAAK,GACX,IAAIC,EAAQT,EAAQQ,QACNE,IAAVD,IAAqBA,EAAQ,GACjCA,GAAS,EACTT,EAAQQ,GAAOC,QAOjBjB,EADc,OAAZQ,GAAoBW,OAAOC,QAAQZ,GAASa,OAAS,EAErD,yBAAKC,UAAWC,IAAUC,OACvBL,OAAOC,QAAQZ,GAASiB,KAAI,YAAmB,IAAjBT,EAAgB,KACvCU,EAAO,GAAmB,GADa,KAClB,GAC3B,OACE,kBAAC,OAAD,CACEC,IAAKX,EACLY,GAAE,cAAgBZ,EAAhB,IACFa,MAAO,CACLC,SAAUJ,IAGXV,OAOD,gDAIV,kBAAC,IAAD,CAAQd,SAAUA,EAAU6B,MAAO5B,EAAW6B,OAAO,UACnD,kBAAC,IAAD,CAAKD,MAAM,OAAOE,YAAW,eAAiB9B,EAAjB,WAC7B,iCAAUH,KAOT,IAAMkC,EAAS,c,qBC3DtBC,EAAOC,QAAU,CAAC,MAAQ","file":"component---src-pages-blog-tags-js-08cbb974071bfd813c50.js","sourcesContent":["import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Layout from \"../../components/layout\"\nimport SEO from \"../../components/seo\"\n\nimport tagStyles from \"./tags.module.css\"\n\nconst Tags = ({ data, location }) => {\n  const siteTitle = `${data.site.siteMetadata.author.name}'s Blog`\n\n  // Generate A Map Of All Tags That Record Times Of Each Tag\n  const tagsMap = {}\n  const posts = data.allMarkdownRemark.edges\n  posts.forEach(post => {\n    const tags = post.node.frontmatter.tags\n    if (tags === null) return true\n    tags.forEach(tag => {\n      let times = tagsMap[tag]\n      if (times === undefined) times = 0\n      times += 1\n      tagsMap[tag] = times\n    })\n  })\n\n  // Generate The Tags UI\n  let tagsDiv\n  if (tagsMap !== null && Object.entries(tagsMap).length > 0) {\n    tagsDiv = (\n      <div className={tagStyles.cloud}>\n        {Object.entries(tagsMap).map(([tag, times]) => {\n          const size = 12 + (times - 1) * 4\n          return (\n            <Link\n              key={tag}\n              to={`/blog/tags/${tag}/`}\n              style={{\n                fontSize: size,\n              }}\n            >\n              {tag}\n            </Link>\n          )\n        })}\n      </div>\n    )\n  } else {\n    tagsDiv = <p>There Are No Tags</p>\n  }\n\n  return (\n    <Layout location={location} title={siteTitle} linkTo=\"/blog/\">\n      <SEO title=\"Tags\" description={`All Tags Of ${siteTitle} Posts`} />\n      <article>{tagsDiv}</article>\n    </Layout>\n  )\n}\n\nexport default Tags\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        author {\n          name\n        }\n      }\n    }\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      limit: 1000\n    ) {\n      edges {\n        node {\n          frontmatter {\n            tags\n          }\n        }\n      }\n    }\n  }\n`\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cloud\":\"tags-module--cloud--LPcA2\"};"],"sourceRoot":""}